1. git reset: git reset, is used to undo changes in the state of local git repo, it have three command line option which are --soft, --mixed, --hard corresponding to the three trees of git. These trees are the commit history (HEAD), the staging index, and the working directory.

2. git revert: The git revert command can be considered an 'undo' type command, however, it is not a traditional undo operation. Instead of removing the commit from the project history, it figures out how to invert the changes introduced by the commit and appends a new commit with the resulting inverse content. This prevents Git from losing history, which is important for the integrity of your revision history and for reliable collaboration.

3. git cherry pick:  Cherry picking is the act of picking a commit from a branch and applying it to another. git cherry-pick can be useful for undoing changes. For example, say a commit is accidently made to the wrong branch. You can switch to the correct branch and cherry-pick the commit to where it should belong.

4. git rebase: Rebasing is the process of moving or combining a sequence of commits to a new base commit.
rebasing is changing the base of your branch from one commit to another making it appear as if you'd created your branch from a different commit.

5. difference between git merge and git rebase:
git merge: it will create a new commit and combine master branch into the feature branch. Here, feature branch commits keep as it is and commit history does not change.

git rebase:Rebase apply all feature branch changes on top of master branch by creating new commit for each of its previous commit messages. Which means that rebase command will change your commit history and regenerate commits again on top of master branch.
